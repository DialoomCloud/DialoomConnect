Funcionalidad: Campos “Topics” para el Dashboard Profile de Hosts en Dialoom (Replit), integrados con la base de datos PostgreSQL (Neon)
	1.	OBJETIVO
Permitir que cada host añada, edite y elimine hasta 10 temas sobre los que desea hablar durante la videollamada y guardarlos de forma persistente en la tabla hosts de la base de datos.
	2.	UBICACIÓN EN LA PANTALLA DE PERFIL
Información básica
	•	Dirección
	•	Topics   ← nuevo bloque
	•	Descripción profesional
	3.	DISEÑO DE LA INTERFAZ
• Input repetible: cada topic se muestra en un campo de texto.
• Botón “+” (Añadir topic): crea un input vacío; se deshabilita cuando ya existen 10 topics.
• Botón papelera: elimina el input correspondiente.
• Contador: “x / 10 topics”, actualizado en tiempo real.
• Placeholder: “Escribe un tema (p. ej. Marketing digital)”.
• Validación en línea: máximo 80 caracteres y sin emojis ni HTML; el campo se marca en rojo si hay error.
	4.	RESTRICCIONES Y VALIDACIONES
• Máximo 10 topics por usuario.
• Máximo 80 caracteres por topic.
• Solo texto plano (se escapan caracteres especiales).
• El botón “Save profile” permanece inactivo si hay errores.
	5.	PERSISTENCIA EN POSTGRESQL (NEON) – OPCIÓN ÚNICA
Añadir una columna array llamada topics en la tabla hosts.
Archivo de migración: 2025-08-06_add_topics_to_hosts.sql
Contenido:
– migration 2025-08-06_add_topics_to_hosts.sql
ALTER TABLE hosts
ADD COLUMN topics TEXT[] NOT NULL DEFAULT ‘{}’;
API de guardado: PATCH /api/hosts/:id con cuerpo JSON { “topics”: [ “string”, … ] }
Consulta de guardado: UPDATE hosts SET topics = $1 WHERE id = $2;
$1 es el array validado (entre 0 y 10 elementos, cada uno ≤ 80 caracteres).
$2 es el id del host.
	6.	FLUJO DE USO
a) Carga de perfil: GET /api/hosts/:id devuelve el array topics y se muestra en la interfaz.
b) Guardar: PATCH /api/hosts/:id envía el array topics tras la validación.
c) Vista pública: los topics se renderizan como etiquetas o lista simple.
	7.	TAREAS DE DESARROLLO
	•	Crear el componente TopicsEditor en el frontend (estado topics: string[]).
	•	Ampliar el endpoint backend con validación de tamaño y longitud.
	•	Incluir el archivo de migración SQL y aplicarlo en la instancia Neon.
	•	Pruebas: añadir, eliminar y editar topics, comprobar el límite de 10 topics y 80 caracteres, y verificar que los datos persisten tras guardar y recargar.
	8.	NOTAS ADICIONALES
	•	Accesibilidad: asociar una etiqueta label a cada input y usar aria-live en el contador.
	•	Internacionalización: definir las claves de texto (placeholder, contador) en el sistema i18n.
	•	Estilos: inputs en columna; botones “+” y papelera alineados; seguir la guía de estilo de Dialoom.
	•	Analítica: registrar la métrica topics_count en el evento profile_save para analizar el uso.