3. Conexión a la Sesión en Vivo
Cuando llega el momento agendado de la sesión, tanto el cliente como el mentor van a la sección de Mis Reservas y hacen clic en “Unirse a la sesión” en la reserva correspondiente. Esto abre la sala de videollamada (en web o en la app móvil con un WebView de la PWA). Antes de unirse, probablemente la app muestre una pantalla de lobby para probar cámara y micrófono. Tras eso, al darle “Entrar”, el frontend hace una petición al backend para obtener los tokens de acceso de Agora para esa sesión. El backend genera un token para el mentor (con rol host) y otro para el cliente (rol guest en la llamada) válidos solo durante la hora programada. Devuelve estos tokens y la información del canal (que suele ser un ID único de la reserva). Con los tokens en mano, el SDK de Agora en el frontend conecta al canal de vídeo. En segundos ambos usuarios están en la videollamada en tiempo real, pudiendo verse y oírse. La latencia es muy baja gracias a la red de Agora, incluso si están en distintos países. Durante la llamada, pueden usar los controles: encender/apagar cámara, mutear micrófono, abrir el chat para escribir mensajes (el chat envía texto P2P vía Agora, aunque el backend podría guardar una copia si se desea), o compartir pantalla (en Chrome se pedirá elegir ventana a compartir). Si en algún momento la conexión de uno se cae, Agora intentará reconectar automáticamente. También hay posibilidad de invocar la traducción: supongamos que el mentor habla en inglés y el cliente activa “Traducir a Español”; la app entonces empieza a enviar audio al backend cada cierto intervalo, el backend o un servicio serverless transcribe, GPT-4 traduce a español, ElevenLabs devuelve audio español, y la app lo reproduce en el lado del cliente (quizá por su parlante secundario o mezclado). Todo esto ocurre con un ligero retraso, pero permite al cliente entender más fácilmente. Esta funcionalidad es compleja, pero la describimos para ilustrar la innovación en Dialoom. La sesión en curso también podría ser grabada si así se configuró: el backend habría activado la grabación en Agora cuando ambos entraron, y se les notifica “Esta llamada está siendo grabada”. Si hay algún comportamiento inadecuado, cualquiera puede pulsar “Reportar” dentro de la llamada para marcar el incidente (esto genera el reporte para moderación, como ya vimos). Al finalizar el tiempo de la sesión, los usuarios se despiden y cuelgan. Agora termina la transmisión; si estaba grabando, guarda el archivo. El frontend redirige a ambos a una pantalla de feedback.
4. Post-sesión: Valoración y Seguimiento
Tras la llamada, el cliente es invitado a valorar la sesión. Esto suele presentarse como un formulario: “¿Cómo calificarías a [Mentor]?” con 1 a 5 estrellas, y un campo opcional para comentario. El cliente envía su valoración; el backend la guarda vinculada a la reserva y al perfil del mentor, recalculando su rating promedio. El comentario pasa a ser visible públicamente en el perfil del mentor, a menos que se detecte lenguaje inapropiado (en cuyo caso los admins podrían editarlo o removerlo). Estas reseñas ayudan a futuros clientes a escoger mejor y motivan al mentor a dar un buen servicio. El mentor por su parte también podría marcar internamente si el cliente fue bueno o si hubo problemas (esta retroalimentación interna no es pública, pero sirve para moderación si un cliente es conflictivo repetidamente). En cuanto a pagos, después de la sesión el sistema verifica si todo fue correcto. El dinero del cliente ya quedó capturado por Stripe al inicio de la llamada (se puede configurar PaymentIntent para capture manual al confirmarse la realización, pero en este caso dado que se cobra por adelantado, probablemente Stripe ya cobró). Ahora inicia el conteo del periodo de retención para pago al mentor. En el panel del mentor, esa ganancia aparece como “Pendiente” con una fecha estimada de liberación. Pasado el periodo (ej. 7 días), el backend agrupa ese pago en la siguiente tanda, transfiere el dinero al mentor y marca en su panel como “Pagado”. El mentor recibe notificación: “Hemos depositado €44 en tu cuenta por la sesión X”. Si la sesión hubiera sido cancelada o reembolsada, el mentor no recibiría nada y en su historial vería “Cancelada - sin pago”. Dialoom también cuida la retención de usuarios después de sesiones: por ejemplo, podría enviar un email al cliente agradeciendo su participación y sugiriéndole que agende otra sesión (quizá con un cupón de descuento si fue su primera vez). O si un cliente no reserva hace tiempo, podría recibir un push de “Tenemos nuevos mentores en X área, échales un vistazo”. Estas comunicaciones de seguimiento, administradas desde marketing, buscan que los usuarios vuelvan y que los mentores se mantengan activos ofreciendo disponibilidad. Finalmente, cualquier incidencia post-sesión (por ejemplo, si el cliente siente que la sesión no fue satisfactoria y pide reembolso) se maneja vía soporte. Un admin puede decidir otorgar un reembolso parcial o total y lo procesa en Stripe, ajustando los balances (posiblemente detrayendo ese importe de futuras ganancias del mentor si ya se le pagó, según las políticas). Todos estos casos excepcionales se documentan para analizar mejoras en las políticas. En conclusión, el flujo post-sesión cierra el ciclo con feedback, transacciones finales y re-engagement: el cliente evalúa, el mentor cobra, y la plataforma aprende de la interacción para seguir mejorando. Este ciclo virtuoso busca garantizar la calidad del servicio y la satisfacción de todos los involucrados, lo que a largo plazo alimenta el crecimiento orgánico de Dialoom mediante buenas reseñas y recomendaciones.